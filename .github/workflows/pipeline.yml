name: pipeline

on: [push]

# !!! IMPORTANT !!!
# this pipeline also requires a secret
# the secret is a personal access token
# called 'PIPELINE_PAT'
# used in the build-package job
env:
  PACKAGE_REGISTRY: 'ghcr.io/' #slash required
  PACKAGE_AUTHOR: 'pscldev' #w/o slash
  PACKAGE_NAME: '/job-application/frontend' # starting slash required

jobs:
  test-build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [16]

    steps:
      - name: Checkout üõé
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Setup node env üèó
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          check-latest: true

      - name: Get yarn cache directory path üõ†
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT

      - name: Cache node_modules üì¶
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        uses: actions/cache@v3
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies üì¶
        run: yarn

  build-package:
    if: github.ref == 'refs/heads/master'
    needs: [test-build]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Semantic release
        uses: cycjimmy/semantic-release-action@v3
        with:
          semantic_version: 18
        id: semantic
        env:
          GITHUB_TOKEN: ${{ secrets.PIPELINE_PAT }}

      - name: Set up Docker Buildx
        if: steps.semantic.outputs.new_release_published == 'true'
        uses: docker/setup-buildx-action@v2

      - name: Login to registry üîê
        if: steps.semantic.outputs.new_release_published == 'true'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.PACKAGE_REGISTRY }}
          username: ${{ env.PACKAGE_AUTHOR }}
          password: ${{ secrets.PIPELINE_PAT }}

      - name: Backend - Build and push image üöÄ
        if: steps.semantic.outputs.new_release_published == 'true'
        uses: docker/build-push-action@v3
        with:
          push: true
          context: './'
          file: './Dockerfile'
          tags: ${{ env.PACKAGE_REGISTRY }}${{ env.PACKAGE_AUTHOR }}${{ env.PACKAGE_NAME }}:latest,${{ env.PACKAGE_REGISTRY }}${{ env.PACKAGE_AUTHOR }}${{ env.PACKAGE_NAME }}:${{ steps.semantic.outputs.new_release_version }}
          build-args: |
            DOCKER_TAG=${{ steps.semantic.outputs.new_release_version }}
